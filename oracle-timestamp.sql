SELECT d.RAP_METRICS_MAPPING_ID,
       p.METRICS_DISP,
       m.RISK_TYPE_ID,
       COUNT(DISTINCT m.MASTER_METRIC_ID) AS METRIC_COUNT,
       LISTAGG(m.MASTER_METRIC_ID, ', ') 
            WITHIN GROUP (ORDER BY m.MASTER_METRIC_ID) AS METRIC_IDS
FROM RAP_MASTER_METRIC_DETAILS m
JOIN RAP_METRICS_DETAILS d
  ON d.MASTER_METRIC_ID = m.MASTER_METRIC_ID
JOIN RAP_METRICS_PACK_MAPPING p
  ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
GROUP BY d.RAP_METRICS_MAPPING_ID, p.METRICS_DISP, m.RISK_TYPE_ID
HAVING COUNT(DISTINCT m.MASTER_METRIC_ID) > 1
ORDER BY d.RAP_METRICS_MAPPING_ID, p.METRICS_DISP, m.RISK_TYPE_ID;


MERGE INTO RAP_MASTER_METRIC_DETAILS m
USING (
    SELECT d.MASTER_METRIC_ID,
           p.METRICS_DISP,
           m.RISK_TYPE_ID,
           ROW_NUMBER() OVER (
               PARTITION BY m.RISK_TYPE_ID, p.METRICS_DISP
               ORDER BY d.MASTER_METRIC_ID
           ) AS RN
    FROM RAP_MASTER_METRIC_DETAILS m
    JOIN RAP_METRICS_DETAILS d
      ON d.MASTER_METRIC_ID = m.MASTER_METRIC_ID
    JOIN RAP_METRICS_PACK_MAPPING p
      ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
    WHERE d.RAP_METRICS_MAPPING_ID = 25
) src
ON (m.MASTER_METRIC_ID = src.MASTER_METRIC_ID)
WHEN MATCHED THEN
    UPDATE SET 
        m.MASTER_METRIC_NAME = src.METRICS_DISP,
        m.RISK_TYPE_ID = CASE 
                            WHEN src.RN > 1 
                            THEN 0   -- mark duplicates with risk type 0
                            ELSE src.RISK_TYPE_ID
                         END;
