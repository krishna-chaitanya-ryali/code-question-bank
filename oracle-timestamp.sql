Updated Missing Detection Query:
sql
Copy
Edit
CREATE GLOBAL TEMPORARY TABLE METRIC_MISSING_INSERT (
    METRICS_DISPLAY VARCHAR2(500),
    RISK_TYPE_ID NUMBER
) ON COMMIT PRESERVE ROWS;
sql
Copy
Edit
INSERT INTO METRIC_MISSING_INSERT (METRICS_DISPLAY, RISK_TYPE_ID)
SELECT DISTINCT d.METRICS_DISPLAY, r.RISK_TYPE_ID
FROM RAP_METRICS_DETAILS d
JOIN RAP r ON d.RAP_ID = r.RAP_ID
JOIN RAP_METRICS_PACK_MAPPING p ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
  ON m.MASTER_METRIC_NAME = d.METRICS_DISPLAY
 AND m.RISK_TYPE_ID = r.RISK_TYPE_ID
WHERE d.METRICS_DISPLAY != p.METRICS_DISP
  AND m.MASTER_METRIC_ID IS NULL;
This query:

Focuses on METRICS_DISPLAY ‚â† METRICS_DISP,

Checks if METRICS_DISPLAY is missing from RAP_MASTER_METRIC_DETAILS,

Ensures we only insert what‚Äôs truly missing.

‚úÖ Step 2: Insert into RAP_MASTER_METRIC_DETAILS
Since MASTER_METRIC_ID is an IDENTITY column, use:

sql
Copy
Edit
INSERT INTO RAP_MASTER_METRIC_DETAILS (MASTER_METRIC_NAME, RISK_TYPE_ID)
SELECT METRICS_DISPLAY, RISK_TYPE_ID
FROM METRIC_MISSING_INSERT;
‚úÖ Step 3: Update RAP_METRICS_DETAILS with Correct MASTER_METRIC_ID
Now map the correct ID into RAP_METRICS_DETAILS, whether MASTER_METRIC_ID is currently NULL or incorrect.

sql
Copy
Edit
UPDATE RAP_METRICS_DETAILS d
SET MASTER_METRIC_ID = (
    SELECT m.MASTER_METRIC_ID
    FROM RAP_MASTER_METRIC_DETAILS m
    JOIN RAP r ON d.RAP_ID = r.RAP_ID
    WHERE m.MASTER_METRIC_NAME = d.METRICS_DISPLAY
      AND m.RISK_TYPE_ID = r.RISK_TYPE_ID
)
WHERE EXISTS (
    SELECT 1
    FROM RAP_MASTER_METRIC_DETAILS m
    JOIN RAP r ON d.RAP_ID = r.RAP_ID
    WHERE m.MASTER_METRIC_NAME = d.METRICS_DISPLAY
      AND m.RISK_TYPE_ID = r.RISK_TYPE_ID
);
üîÅ Recap & Why Metrics May Still Be Missing
You may still be seeing missing mappings if:

RISK_TYPE_ID in RAP doesn't match RISK_TYPE_ID in RAP_MASTER_METRIC_DETAILS,

METRICS_DISPLAY is slightly misspelled or mismatched in casing,

Or the earlier query was too strict (which we‚Äôve now improved).
