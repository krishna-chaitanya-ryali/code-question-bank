SELECT
    RRG.RMM_ID,
    RAP.RAP_INSTANCE_ID,
    UT.USER_NAME,
    UT.EMP_ID,
    RRG.RMM_DISPLAY_NAME,
    RRT.RISK_HEADER,
    UR.USER_ROLE_NAME,
    MRUR.ROLE_DESC,
    MRUR.RATIONAL AS "ACCESS_RATIONAL",
    CASE WHEN RMD.METRICS_DISPLAY IS NULL
         THEN RPMP.METRICS_DISP
         ELSE RMD.METRICS_DISPLAY
    END AS METRICS_DISP
FROM USER_TAB UT
JOIN MAP_RAP_USER_ROLE MRUR ON UT.USER_ID = MRUR.USER_ID
JOIN METRIC_ACCESS MIA ON MRUR.USER_ID = MIA.USER_ID
JOIN USER_ROLES UR ON MRUR.ROLE_ID = UR.USER_ROLE_ID
JOIN RAP_METRICS_DETAIL RMD ON MIA.METRIC_DETAIL_ID = RMD.METRIC_DETAIL_ID
JOIN RAP_RISK_TYPE RRT ON RMD.RISK_TYPE_ID = RRT.RISK_TYPE_ID
JOIN RAP_RMM_GROUP RRG ON RRT.RMM_ID = RRG.RMM_ID
JOIN RAP_METRICS_PACK_MAPPING RPMP ON RMD.RAP_METRICS_MAPPING_ID = RPMP.RAP_METRICS_MAPPING_ID
JOIN RAP RAP ON RAP.RAP_INSTANCE_ID = RMD.RAP_INSTANCE_ID
WHERE MRUR.RMM_ID = RRG.RMM_ID
  AND RRG.RMM_ID IN ({placeholders})
  AND RAP.RAP_INSTANCE_ID = (
        SELECT MO.MEET_INSTC_ID
          FROM MEET_INSTC MO
         WHERE MO.RMM_ID = MRUR.RMM_ID
           AND MO.DT_ID = (
                 SELECT MAX(MI.DT_ID)
                   FROM MEET_INSTC MI
                        JOIN MEET_STAT MS
                          ON MI.MEET_STAT_ID = MS.MEET_STAT_ID
                  WHERE MI.RMM_ID = MRUR.RMM_ID
                    AND MI.MEET_STAT_ID IN (2,1)
           )
     )
  AND RMD.METRIC_FLAG <> 'removed'
ORDER BY UT.USER_NAME
