UPDATE (
    SELECT d.MASTER_METRIC_ID AS old_id,
           m.MASTER_METRIC_ID AS new_id
    FROM RAP_METRICS_DETAILS d
    JOIN RAP r
      ON d.RAP_ID = r.RAP_ID
    JOIN MEET_INSTC mi
      ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
    JOIN RAP_METRICS_PACK_MAPPING p
      ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
    JOIN RAP_MASTER_METRIC_DETAILS m
      ON TRIM(UPPER(p.METRICS_DISP)) = TRIM(UPPER(m.MASTER_METRIC_NAME))
    WHERE d.MASTER_METRIC_ID IS NULL
      -- Optional filters
      -- AND mi.ACT_ON_RCRD = 'insert-rap-open'
      -- AND mi.MEET_INSTC_ID = 11657
) t
SET t.old_id = t.new_id;



UPDATE RAP_METRICS_DETAILS d
SET d.MASTER_METRIC_ID = (
    SELECT MIN(m.MASTER_METRIC_ID)  -- pick one deterministic value
    FROM RAP r
    JOIN MEET_INSTC mi
      ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
    JOIN RAP_METRICS_PACK_MAPPING p
      ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
    JOIN RAP_MASTER_METRIC_DETAILS m
      ON TRIM(UPPER(p.METRICS_DISP)) = TRIM(UPPER(m.MASTER_METRIC_NAME))
    WHERE r.RAP_ID = d.RAP_ID
      AND d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
      AND d.MASTER_METRIC_ID IS NULL
)
WHERE d.MASTER_METRIC_ID IS NULL;


SELECT d.METRIC_DETAIL_ID,
       d.RAP_ID,
       d.RAP_METRICS_MAPPING_ID,
       TRIM(d.METRICS_DISPLAY)        AS metrics_display,
       TRIM(p.METRICS_DISP)          AS metrics_disp,
       r.RISK_TYPE_ID                AS rap_risk_type_id,
       m.MASTER_METRIC_ID            AS matched_master_id,
       m.MASTER_METRIC_NAME          AS matched_master_name,
       m.CREATE_DT,
       m.UPDT_DT
FROM RAP_METRICS_DETAILS d
JOIN RAP r
  ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi
  ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p
  ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
  ON TRIM(UPPER(p.METRICS_DISP)) = TRIM(UPPER(m.MASTER_METRIC_NAME))
WHERE d.MASTER_METRIC_ID IS NULL
  AND mi.ACT_ON_RCRD = 'insert-rap-open'
  AND mi.MEET_INSTC_ID = 11657
ORDER BY d.METRIC_DETAIL_ID;


CREATE GLOBAL TEMPORARY TABLE TMP_RMD_BACKUP (
  METRIC_DETAIL_ID NUMBER,
  RID ROWID,
  OLD_MASTER_METRIC_ID NUMBER
) ON COMMIT PRESERVE ROWS;

INSERT INTO TMP_RMD_BACKUP (METRIC_DETAIL_ID, RID, OLD_MASTER_METRIC_ID)
SELECT d.METRIC_DETAIL_ID, d.ROWID, d.MASTER_METRIC_ID
FROM RAP_METRICS_DETAILS d
JOIN RAP r ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
JOIN RAP_MASTER_METRIC_DETAILS m
  ON TRIM(UPPER(p.METRICS_DISP)) = TRIM(UPPER(m.MASTER_METRIC_NAME))
WHERE d.MASTER_METRIC_ID IS NULL
  AND mi.ACT_ON_RCRD = 'insert-rap-open'
  AND mi.MEET_INSTC_ID = 11657;


UPDATE RAP_METRICS_DETAILS d
SET d.MASTER_METRIC_ID = (
    SELECT m.MASTER_METRIC_ID
    FROM RAP r
    JOIN MEET_INSTC mi
      ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
    JOIN RAP_METRICS_PACK_MAPPING p
      ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
    JOIN RAP_MASTER_METRIC_DETAILS m
      ON TRIM(UPPER(p.METRICS_DISP)) = TRIM(UPPER(m.MASTER_METRIC_NAME))
    WHERE r.RAP_ID = d.RAP_ID
      AND d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
      AND mi.ACT_ON_RCRD = 'insert-rap-open'
      AND mi.MEET_INSTC_ID = 11657
      AND d.MASTER_METRIC_ID IS NULL
)
WHERE d.MASTER_METRIC_ID IS NULL
  AND EXISTS (
    SELECT 1
    FROM RAP r2
    JOIN MEET_INSTC mi2
      ON r2.RAP_INSTANCE_ID = mi2.MEET_INSTC_ID
    WHERE r2.RAP_ID = d.RAP_ID
      AND mi2.ACT_ON_RCRD = 'insert-rap-open'
      AND mi2.MEET_INSTC_ID = 11657
  );





SELECT METRIC_DETAIL_ID, MASTER_METRIC_ID
FROM RAP_METRICS_DETAILS
WHERE METRIC_DETAIL_ID IN (SELECT METRIC_DETAIL_ID FROM TMP_RMD_BACKUP);











-- Step 1: Create missing master metrics
INSERT INTO RAP_MASTER_METRIC_DETAILS (
    MASTER_METRIC_NAME,
    RISK_TYPE_ID,
    CREATE_DT,
    UPDT_DT
)
SELECT p.METRICS_DISP,
       r.RISK_TYPE_ID,
       SYSTIMESTAMP,
       SYSTIMESTAMP
FROM RAP_METRICS_DETAILS d
JOIN RAP r 
    ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi 
    ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p 
    ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
    ON UPPER(p.METRICS_DISP) = UPPER(m.MASTER_METRIC_NAME)
   AND r.RISK_TYPE_ID = m.RISK_TYPE_ID
WHERE d.MASTER_METRIC_ID IS NULL
  AND m.MASTER_METRIC_ID IS NULL
  AND mi.ACT_ON_RCRD = 'insert-rap-open'
  AND mi.MEET_INSTC_ID = 11657;

-- Step 2: Backfill MASTER_METRIC_ID
-- Step 2: Backfill MASTER_METRIC_ID
-- Step 2: Backfill MASTER_METRIC_ID
UPDATE RAP_METRICS_DETAILS d
SET d.MASTER_METRIC_ID = (
    SELECT MAX(existing.MASTER_METRIC_ID)
    FROM RAP_METRICS_DETAILS existing
    WHERE existing.RAP_METRICS_MAPPING_ID = d.RAP_METRICS_MAPPING_ID
      AND existing.MASTER_METRIC_ID IS NOT NULL
)
WHERE d.MASTER_METRIC_ID IS NULL
  AND EXISTS (
      SELECT 1
      FROM RAP r
      JOIN MEET_INSTC mi 
        ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
      JOIN RAP_METRICS_PACK_MAPPING p 
        ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
      WHERE d.RAP_ID = r.RAP_ID
        AND mi.ACT_ON_RCRD = 'insert-rap-open'
        AND mi.MEET_INSTC_ID = 11657
  );


INSERT INTO RAP_MASTER_METRIC_DETAILS (
    MASTER_METRIC_NAME,
    RISK_TYPE_ID,
    CREATE_DT,
    UPDT_DT
)
SELECT DISTINCT
    p.METRICS_DISP AS MASTER_METRIC_NAME,
    r.RISK_TYPE_ID,
    SYSTIMESTAMP,
    SYSTIMESTAMP
FROM RAP_METRICS_DETAILS d
JOIN RAP r
    ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi
    ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p
    ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
    ON UPPER(m.MASTER_METRIC_NAME) = UPPER(p.METRICS_DISP)
WHERE d.MASTER_METRIC_ID IS NULL
  AND m.MASTER_METRIC_ID IS NULL
  AND NOT EXISTS (
      SELECT 1
      FROM RAP_METRICS_DETAILS e
      WHERE e.RAP_METRICS_MAPPING_ID = d.RAP_METRICS_MAPPING_ID
        AND e.MASTER_METRIC_ID IS NOT NULL
  )
  AND mi.ACT_ON_RCRD = 'insert-rap-open'
  AND mi.MEET_INSTC_ID = 11657;


WITH existing_master_ids AS (
    SELECT RAP_METRICS_MAPPING_ID,
           MAX(MASTER_METRIC_ID) AS MASTER_METRIC_ID
    FROM RAP_METRICS_DETAILS
    WHERE MASTER_METRIC_ID IS NOT NULL
    GROUP BY RAP_METRICS_MAPPING_ID
)
SELECT d.ROWID AS d_rowid,
       d.METRIC_DETAIL_ID,
       d.RAP_ID,
       d.RAP_METRICS_MAPPING_ID,
       d.METRICS_DISPLAY,
       p.METRICS_DISP,
       r.RISK_TYPE_ID,
       emi.MASTER_METRIC_ID AS master_from_mapping,
       m.MASTER_METRIC_ID   AS master_from_name,
       COALESCE(emi.MASTER_METRIC_ID, m.MASTER_METRIC_ID) AS mapped_master_metric_id
FROM RAP_METRICS_DETAILS d
JOIN RAP r 
    ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi 
    ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p 
    ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN existing_master_ids emi
    ON d.RAP_METRICS_MAPPING_ID = emi.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
    ON UPPER(p.METRICS_DISP) = UPPER(m.MASTER_METRIC_NAME)
   AND r.RISK_TYPE_ID = m.RISK_TYPE_ID
WHERE d.MASTER_METRIC_ID IS NULL
  AND mi.ACT_ON_RCRD = 'insert-rap-open'
  AND mi.MEET_INSTC_ID = 11657
ORDER BY d.METRIC_DETAIL_ID;
