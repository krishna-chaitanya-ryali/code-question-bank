SELECT d.ROWID AS d_rowid,
       d.RAP_METRICS_MAPPING_ID,
       d.METRICS_DISPLAY,
       p.METRICS_DISP,
       mi.RISK_TYPE_ID AS instc_risk_type,
       m.RISK_TYPE_ID  AS master_risk_type,
       m.MASTER_METRIC_NAME,
       m.MASTER_METRIC_ID,
       COALESCE(m.MASTER_METRIC_ID, mm.MASTER_METRIC_ID) AS final_master_metric_id
FROM RAP_METRICS_DETAILS d
JOIN RAP r
    ON d.RAP_ID = r.RAP_ID
JOIN MEET_INSTC mi
    ON r.RAP_INSTANCE_ID = mi.MEET_INSTC_ID
JOIN RAP_METRICS_PACK_MAPPING p
    ON d.RAP_METRICS_MAPPING_ID = p.RAP_METRICS_MAPPING_ID
LEFT JOIN RAP_MASTER_METRIC_DETAILS m
    ON (
           mi.RISK_TYPE_ID = m.RISK_TYPE_ID
        OR UPPER(d.METRICS_DISPLAY) = UPPER(m.MASTER_METRIC_NAME)
        OR UPPER(p.METRICS_DISP)   = UPPER(m.MASTER_METRIC_NAME)
    )
LEFT JOIN (
    -- Find an existing MASTER_METRIC_ID for the same RAP_METRICS_MAPPING_ID
    SELECT RAP_METRICS_MAPPING_ID, MAX(MASTER_METRIC_ID) AS MASTER_METRIC_ID
    FROM RAP_METRICS_DETAILS
    WHERE MASTER_METRIC_ID IS NOT NULL
    GROUP BY RAP_METRICS_MAPPING_ID
) mm
    ON d.RAP_METRICS_MAPPING_ID = mm.RAP_METRICS_MAPPING_ID
WHERE d.MASTER_METRIC_ID IS NULL;
